@model Evaluacion.Models.Request.Cv.InformacionDTO

@{
    ViewData["Title"] = "Crear";
}

<div class="row row-height" style="margin-bottom: 13px;">
    <div class="col-md-12">
        <div class="card-group">
            <div class="card">
                <div class="card-body">
                    <h1 class="card-subtitle mb-2" style="font-size: 20px; color: #198754"><i class="fa fa-wrench"></i>   Crear</h1>
                    <hr style="margin:0;" />
                    <form action="/Informacion/Create" method="post" class="InformacionForm" novalidate>
                        <div class="row">
                            <div class="col-md-4">
                                <label class="control-label">Nombre</label>
                                @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control", @id="", maxlength = "50", placeholder="Ingresa el nombre", required = "required" })
                                <div class="invalid-feedback">
                                    El campo (Nombre) es requerido.
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label class="control-label">Correo</label>
                                @Html.TextBoxFor(m => m.Correo, new { @class = "form-control", @id="", maxlength = "50", placeholder="Ingresa el correo", required = "required" })
                                <div class="invalid-feedback">
                                    El campo (Correo) es requerido.
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label class="control-label">Teléfono</label>
                                @Html.TextBoxFor(m => m.Telefono, new { @class = "form-control", @id="", maxlength = "50", placeholder="Ingresa el teléfono", required = "required" })
                                <div class="invalid-feedback">
                                    El campo (Teléfono) es requerido.
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <label class="control-label">Sexo</label>
                                @Html.TextBoxFor(m => m.Sexo, new { @class = "form-control", @id="", maxlength = "50", placeholder="Ingresa el sexo", required = "required" })
                                <div class="invalid-feedback">
                                    El campo (Sexo) es requerido.
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label class="control-label">País de residencia</label>
                                @Html.TextBoxFor(m => m.PaisResidencia, new { @class = "form-control", @id="", maxlength = "50", placeholder="Ingresa el país de residencia", required = "required" })
                                <div class="invalid-feedback">
                                    El campo (País de residencia) es requerido.
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-12">
                                <div class="d-grid gap-2">
                                    <input type="submit" class="btn btn-success" value="Guardar">
                                    <a href="@Url.Action("Index", "Informacion", null)" class="btn btn-success">Regresar</a>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var forms = document.getElementsByClassName('InformacionForm');
    var validation = Array.prototype.filter.call(forms, function(form) {
        form.addEventListener('submit', function(event) {
            if (form.checkValidity() === false) {
                event.preventDefault();
                event.stopPropagation();
            }

            form.classList.add('was-validated');

        }, false);
    });
</script>